stages:
  - stg_validate
  - stg_plan
  - stg_apply
  - stg_destroy
default:
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  before_script:
    - terraform -v
    - cd $CI_PROJECT_DIR/S3/s3-public
    - terraform init 
  cache:
    key: terraform
    paths:
      - .terraform
jb-tf-validate:
  stage: stg_validate
  script:
    - terraform -v
    - cd $CI_PROJECT_DIR/S3/s3-public
    - echo " Validating my terraform code"
    - terraform validate
  except:
    refs:
      - master
jb-tf-plan:
  stage: stg_plan
  script:
    - cd $CI_PROJECT_DIR/S3/s3-public
    - echo "Generating terraform plan and output to file 'plan' "
    - terraform plan --out plan
  artifacts:
    paths:
      - '$CI_PROJECT_DIR/S3/s3-public'

jb-tf-apply:
  stage: stg_apply
  script:
    - cd $CI_PROJECT_DIR/S3/s3-public
    - echo "Spinning up resources via terraform apply step"
    - terraform apply --auto-approve 
    - terraform state list
  when: always
  allow_failure: false
  artifacts:
    paths:
      - '$CI_PROJECT_DIR/S3/s3-public/terraform.tfstate'
jb-tf-destroy:
  stage: stg_destroy
  script:
    - cd $CI_PROJECT_DIR/S3/s3-public
    - echo "Destroying resources"
    - terraform destroy --auto-approve
  dependencies:
    - "jb-tf-apply"
  when: manual
  only:
    refs:
      - master
